@mixin fontSize($size: $defaultFontSize, $useEM: false) {
    font-size: $size+px;
    @if $useEM { font-size: ($size/10)+em; }
    @else { font-size: ($size/10)+rem; }
}

@mixin size($width, $height: $width) {
    width: $width;
    height: $height;
}

@mixin translate3d($x, $y, $z) {
    -webkit-transform: translate3d($x, $y, $z) scale3d(1, 1, 1);
    -moz-transform: translate3d($x, $y, $z) scale3d(1, 1, 1);
    -ms-transform: translate3d($x, $y, $z) scale3d(1, 1, 1);
    -o-transform: translate3d($x, $y, $z) scale3d(1, 1, 1);
    transform: translate3d($x, $y, $z) scale3d(1, 1, 1);
}

@mixin buttonWithGradient($colour) {
    background-color: $colour;
    background-image: linear-gradient(bottom, darken($colour, 10%) 27%, $colour 64%);
    background-image: -o-linear-gradient(bottom, darken($colour, 10%) 27%, $colour 64%);
    background-image: -moz-linear-gradient(bottom, darken($colour, 10%) 27%, $colour 64%);
    background-image: -webkit-linear-gradient(bottom, darken($colour, 10%) 27%, $colour 64%);
    background-image: -ms-linear-gradient(bottom, darken($colour, 10%) 27%, $colour 64%);
    background-image: -webkit-gradient(linear, left bottom, left top, color-stop(0.27, darken($colour, 10%)), color-stop(0.64, $colour));

    &:hover {
        background-color: $colour;
        background-image: linear-gradient(bottom, $colour 27%, darken($colour, 10%) 64%);
        background-image: -o-linear-gradient(bottom, $colour 27%, darken($colour, 10%) 64%);
        background-image: -moz-linear-gradient(bottom, $colour 27%, darken($colour, 10%) 64%);
        background-image: -webkit-linear-gradient(bottom, $colour 27%, darken($colour, 10%) 64%);
        background-image: -ms-linear-gradient(bottom, $colour 27%, darken($colour, 10%) 64%);
        background-image: -webkit-gradient(linear, left bottom, left top, color-stop(0.27, $colour), color-stop(0.64, darken($colour, 10%)));
    }
}

@mixin columns($count) {
    -webkit-column-count: $count; /* Chrome, Safari, Opera */
    -moz-column-count: $count; /* Firefox */
    column-count: $count;
}

@mixin columnGap($gap) {
    -webkit-column-gap:$gap; /* Safari and Chrome */
    -moz-column-gap:$gap; /* Firefox */
    column-gap:$gap;
}

@mixin responsive($width) {
    @media all and (max-width: $width+px) {
        @content;
    }
}

@mixin retina($filename, $width, $height) {
    @media (min--moz-device-pixel-ratio: 1.3), (-o-min-device-pixel-ratio: 2.6/2), (-webkit-min-device-pixel-ratio: 1.3), (min-device-pixel-ratio: 1.3), (min-resolution: 1.3dppx) {
        background: {
            image: url($filename);
            size: $width $height;
        }
    }
}

%notSelectable {
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
}

%hiddenBackface {
    -webkit-backface-visibility: hidden;
    -moz-backface-visibility: hidden;
    -ms-backface-visibility: hidden;
    -o-backface-visibility: hidden;
    backface-visibility: hidden;
}

%button {
    @include fontSize($defaultFontSize);
    border: none;
    border-radius: $borderRadius;
    padding: 5px 20px 7px 20px;
    cursor: pointer;
    -webkit-box-shadow: none;
    -moz-box-shadow:none;
    display: inline-block;
    outline: none;
}
